#
# Completions for the podman command
#

function __fish_podman_no_subcommand --description 'Test if podman has yet to be given the subcommand'
    for i in (commandline -opc)
        if contains -- $i attach build commit container cp create diff events exec export generate healthcheck history image images import info inspect kill load login logout logs mount pause play pod port ps pull push restart rm rmi run save search start stats stop system tag top umount unpause varlink version volume wait
            return 1
        end
    end
    return 0
end

function __fish_podman_seen_subcommand_path --description 'Test whether the full path of subcommands is the current path'
    set -l cmd (commandline -opc)
    set -e cmd[1]
    set -l pattern (string replace -a " " ".+" "$argv")
    string match -r "$pattern" (string trim -- "$cmd")
end

function __fish_seen_argument
    argparse 's/short=+' 'l/long=+' -- $argv
    set cmd (commandline -co)
    set -e cmd[1]
    for t in $cmd
        for s in $_flag_s
            if string match -qr "^-[A-z0-9]*"$s"[A-z0-9]*\$" -- $t
                return 0
            end
        end
        for l in $_flag_l
            if string match -q -- "--$l" $t
                return 0
            end
        end
    end
    return 1
end
complete -c podman -f -n '__fish_podman_no_subcommand' -a attach -d 'Attach to a running container'
complete -c podman -f -n '__fish_podman_no_subcommand' -a build -d 'Build an image using instructions from Dockerfiles'
complete -c podman -f -n '__fish_podman_no_subcommand' -a commit -d 'Create new image based on the changed container'
complete -c podman -f -n '__fish_podman_no_subcommand' -a container -d 'Manage Containers'
complete -c podman -f -n '__fish_podman_no_subcommand' -a cp -d 'Copy files/folders between a container and the local filesystem'
complete -c podman -f -n '__fish_podman_no_subcommand' -a create -d 'Create but do not start a container'
complete -c podman -f -n '__fish_podman_no_subcommand' -a diff -d 'Inspect changes on container\'s file systems'
complete -c podman -f -n '__fish_podman_no_subcommand' -a events -d 'show podman events'
complete -c podman -f -n '__fish_podman_no_subcommand' -a exec -d 'Run a process in a running container'
complete -c podman -f -n '__fish_podman_no_subcommand' -a export -d 'Export container\'s filesystem contents as a tar archive'
complete -c podman -f -n '__fish_podman_no_subcommand' -a generate -d 'Generated structured data'
complete -c podman -f -n '__fish_podman_no_subcommand' -a healthcheck -d 'Manage Healthcheck'
complete -c podman -f -n '__fish_podman_no_subcommand' -a history -d 'Show history of a specified image'
complete -c podman -f -n '__fish_podman_no_subcommand' -a image -d 'Manage images'
complete -c podman -f -n '__fish_podman_no_subcommand' -a images -d 'List images in local storage'
complete -c podman -f -n '__fish_podman_no_subcommand' -a import -d 'Import a tarball to create a filesystem image'
complete -c podman -f -n '__fish_podman_no_subcommand' -a info -d 'Display podman system information'
complete -c podman -f -n '__fish_podman_no_subcommand' -a inspect -d 'Display the configuration of a container or image'
complete -c podman -f -n '__fish_podman_no_subcommand' -a kill -d 'Kill one or more running containers with a specific signal'
complete -c podman -f -n '__fish_podman_no_subcommand' -a load -d 'Load an image from container archive'
complete -c podman -f -n '__fish_podman_no_subcommand' -a login -d 'Login to a container registry'
complete -c podman -f -n '__fish_podman_no_subcommand' -a logout -d 'Logout of a container registry'
complete -c podman -f -n '__fish_podman_no_subcommand' -a logs -d 'Fetch the logs of a container'
complete -c podman -f -n '__fish_podman_no_subcommand' -a mount -d 'Mount a working container\'s root filesystem'
complete -c podman -f -n '__fish_podman_no_subcommand' -a pause -d 'Pause all the processes in one or more containers'
complete -c podman -f -n '__fish_podman_no_subcommand' -a play -d 'Play a pod'
complete -c podman -f -n '__fish_podman_no_subcommand' -a pod -d 'Manage pods'
complete -c podman -f -n '__fish_podman_no_subcommand' -a port -d 'List port mappings or a specific mapping for the container'
complete -c podman -f -n '__fish_podman_no_subcommand' -a ps -d 'List containers'
complete -c podman -f -n '__fish_podman_no_subcommand' -a pull -d 'Pull an image from a registry'
complete -c podman -f -n '__fish_podman_no_subcommand' -a push -d 'Push an image to a specified destination'
complete -c podman -f -n '__fish_podman_no_subcommand' -a restart -d 'Restart one or more containers'
complete -c podman -f -n '__fish_podman_no_subcommand' -a rm -d 'Remove one or more containers'
complete -c podman -f -n '__fish_podman_no_subcommand' -a rmi -d 'Removes one or more images from local storage'
complete -c podman -f -n '__fish_podman_no_subcommand' -a run -d 'Run a command in a new container'
complete -c podman -f -n '__fish_podman_no_subcommand' -a save -d 'Save image to an archive'
complete -c podman -f -n '__fish_podman_no_subcommand' -a search -d 'Search registry for image'
complete -c podman -f -n '__fish_podman_no_subcommand' -a start -d 'Start one or more containers'
complete -c podman -f -n '__fish_podman_no_subcommand' -a stats -d 'Display a live stream of container resource usage statistics'
complete -c podman -f -n '__fish_podman_no_subcommand' -a stop -d 'Stop one or more containers'
complete -c podman -f -n '__fish_podman_no_subcommand' -a system -d 'Manage podman'
complete -c podman -f -n '__fish_podman_no_subcommand' -a tag -d 'Add an additional name to a local image'
complete -c podman -f -n '__fish_podman_no_subcommand' -a top -d 'Display the running processes of a container'
complete -c podman -f -n '__fish_podman_no_subcommand' -a umount -d 'Unmounts working container\'s root filesystem'
complete -c podman -f -n '__fish_podman_no_subcommand' -a unpause -d 'Unpause the processes in one or more containers'
complete -c podman -f -n '__fish_podman_no_subcommand' -a varlink -d 'Run varlink interface'
complete -c podman -f -n '__fish_podman_no_subcommand' -a version -d 'Display the Podman Version Information'
complete -c podman -f -n '__fish_podman_no_subcommand' -a volume -d 'Manage volumes'
complete -c podman -f -n '__fish_podman_no_subcommand' -a wait -d 'Block on one or more containers'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_no_subcommand'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_no_subcommand' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_no_subcommand'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l detach-keys -d 'Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach'   -l no-stdin -d 'Do not attach STDIN. The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach'   -l sig-proxy -d 'Proxy received signals to the process'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l add-host -d 'add a custom host-to-IP mapping (`host:ip`) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l annotation -d 'Set metadata for an image (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l authfile -d 'path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l build-arg -d '`argument=value` to supply to the builder'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cache-from -d 'Images to utilise as potential cache sources. The build process does not currently support caching so this is a NOOP.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cap-add -d 'add the specified capability when running (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cap-drop -d 'drop the specified capability when running (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cert-dir -d 'use certificates at the specified path to access the registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cgroup-parent -d 'optional parent cgroup for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cni-plugin-path -d '`path` of CNI network plugins'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l compress -d 'This is legacy option, which has no effect on the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cpu-period -d 'limit the CPU CFS (Completely Fair Scheduler) period'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cpu-quota -d 'limit the CPU CFS (Completely Fair Scheduler) quota'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r -s c -l cpu-shares -d 'CPU shares (relative weight)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cpuset-cpus -d 'CPUs in which to allow execution (0-3, 0,1)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cpuset-mems -d 'memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l creds -d 'use `[username[:password]]` for accessing the registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'  -s D -l disable-compression -d 'don\'t compress layers by default'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l disable-content-trust -d 'This is a Docker specific option and is a NOOP'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r -s f -l file -d '`pathname or URL` of a Dockerfile'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l force-rm -d 'Always remove intermediate containers after a build, even if the build is unsuccessful.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l format -d '`format` of the built image\'s manifest and metadata. Use BUILDAH_FORMAT environment variable to override.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l iidfile -d '`file` to write the image ID to'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l ipc -d '\'container\', `path` of IPC namespace to join, or \'host\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l isolation -d '`type` of process isolation to use. Use BUILDAH_ISOLATION environment variable to override.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l label -d 'Set metadata for an image (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l layers -d 'cache intermediate layers during build. Use BUILDAH_LAYERS environment variable to override.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l logfile -d 'log to `file` instead of stdout/stderr'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l loglevel -d 'adjust logging level (range from -2 to 3)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r -s m -l memory -d 'memory limit (format: <number>[<unit>], where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l memory-swap -d 'swap limit equal to memory plus swap: \'-1\' to enable unlimited swap'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l network -d '\'container\', `path` of network namespace to join, or \'host\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l no-cache -d 'Do not use existing cached images for the container build. Build from the start with a new set of cached layers.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l pid -d 'container, `path` of PID namespace to join, or \'host\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l platform -d 'CLI compatibility: no action or effect'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l pull -d 'pull the image if not present'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l pull-always -d 'pull the image, even if a version is present'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'  -s q -l quiet -d 'refrain from announcing build instructions and image read/write progress'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l rm -d 'Remove intermediate containers after a successful build'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l runtime-flag -d 'add global flags for the container runtime'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l security-opt -d 'security options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l shm-size -d 'size of \'/dev/shm\'. The format is `<number><unit>`.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l signature-policy -d '`pathname` of signature policy file (not usually used)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l squash -d 'Squash newly built layers into a single new layer.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r -s t -l tag -d 'tagged `name` to apply to the built image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l target -d 'set the target build stage to build'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l tls-verify -d 'require HTTPS and verify certificates when accessing the registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l ulimit -d 'ulimit options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l userns -d '\'container\', `path` of user namespace to join, or \'host\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l userns-gid-map -d '`containerID:hostID:length` GID mapping to use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l userns-gid-map-group -d '`name` of entries from /etc/subgid to use to set user namespace GID mapping'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l userns-uid-map -d '`containerID:hostID:length` UID mapping to use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l userns-uid-map-user -d '`name` of entries from /etc/subuid to use to set user namespace UID mapping'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l uts -d 'container, :`path` of UTS namespace to join, or \'host\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r -s v -l volume -d 'bind mount a volume into the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r -s a -l author -d 'Set the author for the image committed'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r -s c -l change -d 'Apply the following possible instructions to the created image (default []): CMD | ENTRYPOINT | ENV | EXPOSE | LABEL | ONBUILD | STOPSIGNAL | USER | VOLUME | WORKDIR'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r -s f -l format -d '`Format` of the image manifest and metadata'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r -s m -l message -d 'Set commit message for imported image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit'  -s p -l pause -d 'Pause container during commit'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit'  -s q -l quiet -d 'Suppress output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a attach -d 'Attach to a running container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a checkpoint -d 'Checkpoints one or more containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a cleanup -d 'Cleanup network and mountpoints of one or more containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a commit -d 'Create new image based on the changed container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a create -d 'Create but do not start a container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a diff -d 'Inspect changes on container\'s file systems'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a exec -d 'Run a process in a running container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a exists -d 'Check if a container exists in local storage'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a export -d 'Export container\'s filesystem contents as a tar archive'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a inspect -d 'Display the configuration of a container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a kill -d 'Kill one or more running containers with a specific signal'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a list -d 'List containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a logs -d 'Fetch the logs of a container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a mount -d 'Mount a working container\'s root filesystem'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a pause -d 'Pause all the processes in one or more containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a port -d 'List port mappings or a specific mapping for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a prune -d 'Remove all stopped containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a restart -d 'Restart one or more containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a restore -d 'Restores one or more containers from a checkpoint'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a rm -d 'Remove one or more containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a run -d 'Run a command in a new container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a runlabel -d 'Execute the command described by an image label'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a start -d 'Start one or more containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a stats -d 'Display a live stream of container resource usage statistics'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a stop -d 'Stop one or more containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a top -d 'Display the running processes of a container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a umount -d 'Unmounts working container\'s root filesystem'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a unpause -d 'Unpause the processes in one or more containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -a wait -d 'Block on one or more containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l detach-keys -d 'Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach'   -l no-stdin -d 'Do not attach STDIN. The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach'   -l sig-proxy -d 'Proxy received signals to the process'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path attach'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint'  -s a -l all -d 'Checkpoint all running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint'  -s k -l keep -d 'Keep all temporary checkpoint files'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint'  -s R -l leave-running -d 'Leave the container running after writing checkpoint to disk'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint'   -l tcp-established -d 'Checkpoint a container with established TCP connections'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container checkpoint'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup'  -s a -l all -d 'Cleans up all containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup'   -l rm -d 'After cleanup, remove the container entirely'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container cleanup'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r -s a -l author -d 'Set the author for the image committed'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r -s c -l change -d 'Apply the following possible instructions to the created image (default []): CMD | ENTRYPOINT | ENV | EXPOSE | LABEL | ONBUILD | STOPSIGNAL | USER | VOLUME | WORKDIR'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r -s f -l format -d '`Format` of the image manifest and metadata'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r -s m -l message -d 'Set commit message for imported image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit'  -s p -l pause -d 'Pause container during commit'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit'  -s q -l quiet -d 'Suppress output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path commit'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l add-host -d 'Add a custom host-to-IP mapping (host:ip) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l annotation -d 'Add annotations to container (key:value) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s a -l attach -d 'Attach to STDIN, STDOUT or STDERR (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l blkio-weight -d 'Block IO weight (relative weight) accepts a weight value between 10 and 1000.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l blkio-weight-device -d 'Block IO weight (relative device weight, format: `DEVICE_NAME:WEIGHT`)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cap-add -d 'Add capabilities to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cap-drop -d 'Drop capabilities from the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cgroup-parent -d 'Optional parent cgroup for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cidfile -d 'Write the container ID to the file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l conmon-pidfile -d 'Path to the file that will receive the PID of conmon'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-period -d 'Limit the CPU CFS (Completely Fair Scheduler) period'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-quota -d 'Limit the CPU CFS (Completely Fair Scheduler) quota'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-rt-period -d 'Limit the CPU real-time period in microseconds'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-rt-runtime -d 'Limit the CPU real-time runtime in microseconds'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-shares -d 'CPU shares (relative weight)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpus -d 'Number of CPUs. The default is 0.000 which means no limit'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpuset-cpus -d 'CPUs in which to allow execution (0-3, 0,1)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpuset-mems -d 'Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'  -s d -l detach -d 'Run container in background and print container ID'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l detach-keys -d 'Override the key sequence for detaching a container. Format is a single character `[a-Z]` or `ctrl-<value>` where `<value>` is one of: `a-z`, `@`, `^`, `[`, `\`, `]`, `^` or `_`'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l device -d 'Add a host device to the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l device-read-bps -d 'Limit read rate (bytes per second) from a device (e.g. --device-read-bps=/dev/sda:1mb)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l device-read-iops -d 'Limit read rate (IO per second) from a device (e.g. --device-read-iops=/dev/sda:1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l device-write-bps -d 'Limit write rate (bytes per second) to a device (e.g. --device-write-bps=/dev/sda:1mb)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l device-write-iops -d 'Limit write rate (IO per second) to a device (e.g. --device-write-iops=/dev/sda:1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l dns -d 'Set custom DNS servers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l dns-opt -d 'Set custom DNS options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l dns-search -d 'Set custom DNS search domains'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l entrypoint -d 'Overwrite the default ENTRYPOINT of the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s e -l env -d 'Set environment variables in container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l env-file -d 'Read in a file of environment variables'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l expose -d 'Expose a port or a range of ports (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l gidmap -d 'GID map to use for the user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l group-add -d 'Add additional groups to join (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l healthcheck-command -d 'set a healthcheck command for the container (\'none\' disables the existing healthcheck)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l healthcheck-interval -d 'set an interval for the healthchecks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l healthcheck-retries -d 'the number of retries allowed before a healthcheck is considered to be unhealthy'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l healthcheck-start-period -d 'the initialization time needed for a container to bootstrap'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l healthcheck-timeout -d 'the maximum time allowed to complete the healthcheck before an interval is considered failed'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l help -d ''
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s h -l hostname -d 'Set container hostname'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l image-volume -d 'Tells podman how to handle the builtin image volumes. The options are: \'bind\', \'tmpfs\', or \'ignore\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l init -d 'Run an init binary inside the container that forwards signals and reaps processes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l init-path -d 'Path to the container-init binary (default: "/usr/libexec/podman/catatonit")'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'  -s i -l interactive -d 'Keep STDIN open even if not attached'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l ip -d 'Specify a static IPv4 address for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l ipc -d 'IPC namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l kernel-memory -d 'Kernel memory limit (format: `<number>[<unit>]`, where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s l -l label -d 'Set metadata on container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l label-file -d 'Read in a line delimited file of labels (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l log-driver -d 'Logging driver for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l log-opt -d 'Logging driver options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l mac-address -d 'Container MAC address (e.g. 92:d0:c6:0a:29:33), not currently supported'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s m -l memory -d 'Memory limit (format: <number>[<unit>], where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l memory-reservation -d 'Memory soft limit (format: <number>[<unit>], where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l memory-swap -d 'Swap limit equal to memory plus swap: \'-1\' to enable unlimited swap'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l memory-swappiness -d 'Tune container memory swappiness (0 to 100, or -1 for system default)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l mount -d 'Attach a filesystem mount to the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l name -d 'Assign a name to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l net -d 'Connect a container to a network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l network -d 'Connect a container to a network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l oom-kill-disable -d 'Disable OOM Killer'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l oom-score-adj -d 'Tune the host\'s OOM preferences (-1000 to 1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l pid -d 'PID namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l pids-limit -d 'Tune container pids limit (set -1 for unlimited)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l pod -d 'Run container in an existing pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l privileged -d 'Give extended privileges to container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s p -l publish -d 'Publish a container\'s port, or a range of ports, to the host (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'  -s P -l publish-all -d 'Publish all exposed ports to random ports on the host interface'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'  -s q -l quiet -d 'Suppress output information when pulling images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l read-only -d 'Make containers root filesystem read-only'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l restart -d 'Restart is not supported.  Please use a systemd unit file for restart'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l rm -d 'Remove container (and pod if created) after exit'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l rootfs -d 'The first argument is not an image but the rootfs to the exploded container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l security-opt -d 'Security Options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l shm-size -d 'Size of `/dev/shm`. The format is `<number><unit>`'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l stop-signal -d 'Signal to stop a container. Default is SIGTERM'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l stop-timeout -d 'Timeout (in seconds) to stop a container. Default is 10'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l subgidname -d 'Name of range listed in /etc/subgid for use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l subuidname -d 'Name of range listed in /etc/subuid for use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l sysctl -d 'Sysctl options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l systemd -d 'Run container in systemd mode if the command executable is systemd or init'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l tmpfs -d 'Mount a temporary filesystem (`tmpfs`) into a container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'  -s t -l tty -d 'Allocate a pseudo-TTY for container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l uidmap -d 'UID map to use for the user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l ulimit -d 'Ulimit options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s u -l user -d 'Username or UID (format: <name|uid>[:<group|gid>])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l userns -d 'User namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l uts -d 'UTS namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s v -l volume -d 'Bind mount a volume into the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l volumes-from -d 'Mount volumes from the specified container(s) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s w -l workdir -d 'Working directory inside the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l format -d 'Change the output format'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r -s e -l env -d 'Set environment variables'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'  -s i -l interactive -d 'Not supported.  All exec commands are interactive by default'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l preserve-fds -d 'Pass N additional file descriptors to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'   -l privileged -d 'Give the process extended Linux capabilities inside the container.  The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'  -s t -l tty -d 'Allocate a pseudo-TTY. The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r -s u -l user -d 'Sets the username or UID used and optionally the groupname or GID for the specified command'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r -s w -l workdir -d 'Working directory inside the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container exists'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r -s o -l output -d 'Write to a specified file (default: stdout, which must be redirected)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r -s f -l format -d 'Change the output format to a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect'  -s s -l size -d 'Display total file size'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container inspect'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill'  -s a -l all -d 'Signal all running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r -s s -l signal -d 'Signal to send to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list'  -s a -l all -d 'Show all the containers, default is only running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r -s f -l filter -d 'Filter output based on conditions given'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l format -d 'Pretty-print containers to JSON or using a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r -s n -l last -d 'Print the n last created containers (all states)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list'  -s l -l latest -d 'Show the latest container created (all states)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list'   -l no-trunc -d 'Display the extended information'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list'   -l ns -d 'Display namespace information'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list'  -s p -l pod -d 'Print the ID and name of the pod the containers are associated with'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list'  -s q -l quiet -d 'Print the numeric IDs of the containers only'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list'  -s s -l size -d 'Display the total file sizes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l sort -d 'Sort output by command, created, id, image, names, runningfor, size, or status'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list'   -l sync -d 'Sync container state with OCI runtime'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container list'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs'  -s f -l follow -d 'Follow log output.  The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l since -d 'Show logs since TIMESTAMP'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l tail -d 'Output the specified number of LINES at the end of the logs.  Defaults to 0, which prints all lines'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs'  -s t -l timestamps -d 'Output the timestamps in the log'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount'  -s a -l all -d 'Mount all containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l format -d 'Change the output format to Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount'   -l notruncate -d 'Do not truncate output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause'  -s a -l all -d 'Pause all running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port'  -s a -l all -d 'Display port information for all containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune'  -s f -l force -d 'Force removal of a running container.  The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container prune'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart'  -s a -l all -d 'Restart all non-running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart'   -l running -d 'Restart only running containers when --all is used'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l time -d 'Seconds to wait for stop before killing the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r -s t -l timeout -d 'Seconds to wait for stop before killing the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore'  -s a -l all -d 'Restore all checkpointed containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore'  -s k -l keep -d 'Keep all temporary checkpoint files'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore'   -l tcp-established -d 'Checkpoint a container with established TCP connections'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container restore'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'  -s a -l all -d 'Remove all containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'  -s f -l force -d 'Force removal of a running container.  The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'  -s v -l volumes -d 'Remove the volumes associated with the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l add-host -d 'Add a custom host-to-IP mapping (host:ip) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l annotation -d 'Add annotations to container (key:value) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s a -l attach -d 'Attach to STDIN, STDOUT or STDERR (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l blkio-weight -d 'Block IO weight (relative weight) accepts a weight value between 10 and 1000.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l blkio-weight-device -d 'Block IO weight (relative device weight, format: `DEVICE_NAME:WEIGHT`)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cap-add -d 'Add capabilities to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cap-drop -d 'Drop capabilities from the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cgroup-parent -d 'Optional parent cgroup for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cidfile -d 'Write the container ID to the file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l conmon-pidfile -d 'Path to the file that will receive the PID of conmon'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-period -d 'Limit the CPU CFS (Completely Fair Scheduler) period'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-quota -d 'Limit the CPU CFS (Completely Fair Scheduler) quota'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-rt-period -d 'Limit the CPU real-time period in microseconds'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-rt-runtime -d 'Limit the CPU real-time runtime in microseconds'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-shares -d 'CPU shares (relative weight)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpus -d 'Number of CPUs. The default is 0.000 which means no limit'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpuset-cpus -d 'CPUs in which to allow execution (0-3, 0,1)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpuset-mems -d 'Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'  -s d -l detach -d 'Run container in background and print container ID'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l detach-keys -d 'Override the key sequence for detaching a container. Format is a single character `[a-Z]` or `ctrl-<value>` where `<value>` is one of: `a-z`, `@`, `^`, `[`, `\`, `]`, `^` or `_`'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l device -d 'Add a host device to the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l device-read-bps -d 'Limit read rate (bytes per second) from a device (e.g. --device-read-bps=/dev/sda:1mb)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l device-read-iops -d 'Limit read rate (IO per second) from a device (e.g. --device-read-iops=/dev/sda:1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l device-write-bps -d 'Limit write rate (bytes per second) to a device (e.g. --device-write-bps=/dev/sda:1mb)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l device-write-iops -d 'Limit write rate (IO per second) to a device (e.g. --device-write-iops=/dev/sda:1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l dns -d 'Set custom DNS servers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l dns-opt -d 'Set custom DNS options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l dns-search -d 'Set custom DNS search domains'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l entrypoint -d 'Overwrite the default ENTRYPOINT of the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s e -l env -d 'Set environment variables in container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l env-file -d 'Read in a file of environment variables'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l expose -d 'Expose a port or a range of ports (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l gidmap -d 'GID map to use for the user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l group-add -d 'Add additional groups to join (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l healthcheck-command -d 'set a healthcheck command for the container (\'none\' disables the existing healthcheck)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l healthcheck-interval -d 'set an interval for the healthchecks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l healthcheck-retries -d 'the number of retries allowed before a healthcheck is considered to be unhealthy'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l healthcheck-start-period -d 'the initialization time needed for a container to bootstrap'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l healthcheck-timeout -d 'the maximum time allowed to complete the healthcheck before an interval is considered failed'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l help -d ''
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s h -l hostname -d 'Set container hostname'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l image-volume -d 'Tells podman how to handle the builtin image volumes. The options are: \'bind\', \'tmpfs\', or \'ignore\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l init -d 'Run an init binary inside the container that forwards signals and reaps processes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l init-path -d 'Path to the container-init binary (default: "/usr/libexec/podman/catatonit")'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'  -s i -l interactive -d 'Keep STDIN open even if not attached'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l ip -d 'Specify a static IPv4 address for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l ipc -d 'IPC namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l kernel-memory -d 'Kernel memory limit (format: `<number>[<unit>]`, where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s l -l label -d 'Set metadata on container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l label-file -d 'Read in a line delimited file of labels (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l log-driver -d 'Logging driver for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l log-opt -d 'Logging driver options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l mac-address -d 'Container MAC address (e.g. 92:d0:c6:0a:29:33), not currently supported'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s m -l memory -d 'Memory limit (format: <number>[<unit>], where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l memory-reservation -d 'Memory soft limit (format: <number>[<unit>], where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l memory-swap -d 'Swap limit equal to memory plus swap: \'-1\' to enable unlimited swap'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l memory-swappiness -d 'Tune container memory swappiness (0 to 100, or -1 for system default)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l mount -d 'Attach a filesystem mount to the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l name -d 'Assign a name to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l net -d 'Connect a container to a network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l network -d 'Connect a container to a network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l oom-kill-disable -d 'Disable OOM Killer'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l oom-score-adj -d 'Tune the host\'s OOM preferences (-1000 to 1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l pid -d 'PID namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l pids-limit -d 'Tune container pids limit (set -1 for unlimited)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l pod -d 'Run container in an existing pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l privileged -d 'Give extended privileges to container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s p -l publish -d 'Publish a container\'s port, or a range of ports, to the host (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'  -s P -l publish-all -d 'Publish all exposed ports to random ports on the host interface'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'  -s q -l quiet -d 'Suppress output information when pulling images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l read-only -d 'Make containers root filesystem read-only'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l restart -d 'Restart is not supported.  Please use a systemd unit file for restart'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l rm -d 'Remove container (and pod if created) after exit'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l rootfs -d 'The first argument is not an image but the rootfs to the exploded container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l security-opt -d 'Security Options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l shm-size -d 'Size of `/dev/shm`. The format is `<number><unit>`'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l sig-proxy -d 'Proxy received signals to the process'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l stop-signal -d 'Signal to stop a container. Default is SIGTERM'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l stop-timeout -d 'Timeout (in seconds) to stop a container. Default is 10'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l subgidname -d 'Name of range listed in /etc/subgid for use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l subuidname -d 'Name of range listed in /etc/subuid for use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l sysctl -d 'Sysctl options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l systemd -d 'Run container in systemd mode if the command executable is systemd or init'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l tmpfs -d 'Mount a temporary filesystem (`tmpfs`) into a container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'  -s t -l tty -d 'Allocate a pseudo-TTY for container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l uidmap -d 'UID map to use for the user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l ulimit -d 'Ulimit options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s u -l user -d 'Username or UID (format: <name|uid>[:<group|gid>])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l userns -d 'User namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l uts -d 'UTS namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s v -l volume -d 'Bind mount a volume into the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l volumes-from -d 'Mount volumes from the specified container(s) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s w -l workdir -d 'Working directory inside the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l authfile -d 'Path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json. Use REGISTRY_AUTH_FILE environment variable to override'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l cert-dir -d '`Pathname` of a directory containing TLS certificates and keys'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l creds -d '`Credentials` (USERNAME:PASSWORD) to use for authenticating to a registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel'   -l display -d 'Preview the command that the label would run'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l name -d 'Assign a name to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel'  -s q -l quiet -d 'Suppress output information when installing images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel'   -l replace -d 'Replace existing container with a new one from the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l signature-policy -d '`Pathname` of signature policy file (not usually used)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel'   -l tls-verify -d 'Require HTTPS and verify certificates when contacting registries'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path container runlabel'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'  -s a -l attach -d 'Attach container\'s STDOUT and STDERR'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l detach-keys -d 'Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'  -s i -l interactive -d 'Keep STDIN open even if not attached'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'   -l sig-proxy -d 'Proxy received signals to the process (default true if attaching, false otherwise)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'  -s a -l all -d 'Show all containers. Only running containers are shown by default. The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l format -d 'Pretty-print container statistics to JSON or using a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'   -l no-reset -d 'Disable resetting the screen between intervals'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'   -l no-stream -d 'Disable streaming stats and only pull the first result, default setting is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop'  -s a -l all -d 'Stop all running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l time -d 'Seconds to wait for stop before killing the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r -s t -l timeout -d 'Seconds to wait for stop before killing the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount'  -s a -l all -d 'Umount all of the currently mounted containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount'  -s f -l force -d 'Force the complete umount all of the currently mounted containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause'  -s a -l all -d 'Unpause all paused containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r -s i -l interval -d 'Milliseconds to wait before polling for completion'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp'   -l extract -d 'Extract the tar file into the destination directory.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path cp'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l add-host -d 'Add a custom host-to-IP mapping (host:ip) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l annotation -d 'Add annotations to container (key:value) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s a -l attach -d 'Attach to STDIN, STDOUT or STDERR (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l blkio-weight -d 'Block IO weight (relative weight) accepts a weight value between 10 and 1000.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l blkio-weight-device -d 'Block IO weight (relative device weight, format: `DEVICE_NAME:WEIGHT`)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cap-add -d 'Add capabilities to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cap-drop -d 'Drop capabilities from the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cgroup-parent -d 'Optional parent cgroup for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cidfile -d 'Write the container ID to the file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l conmon-pidfile -d 'Path to the file that will receive the PID of conmon'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-period -d 'Limit the CPU CFS (Completely Fair Scheduler) period'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-quota -d 'Limit the CPU CFS (Completely Fair Scheduler) quota'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-rt-period -d 'Limit the CPU real-time period in microseconds'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-rt-runtime -d 'Limit the CPU real-time runtime in microseconds'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-shares -d 'CPU shares (relative weight)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpus -d 'Number of CPUs. The default is 0.000 which means no limit'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpuset-cpus -d 'CPUs in which to allow execution (0-3, 0,1)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpuset-mems -d 'Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'  -s d -l detach -d 'Run container in background and print container ID'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l detach-keys -d 'Override the key sequence for detaching a container. Format is a single character `[a-Z]` or `ctrl-<value>` where `<value>` is one of: `a-z`, `@`, `^`, `[`, `\`, `]`, `^` or `_`'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l device -d 'Add a host device to the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l device-read-bps -d 'Limit read rate (bytes per second) from a device (e.g. --device-read-bps=/dev/sda:1mb)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l device-read-iops -d 'Limit read rate (IO per second) from a device (e.g. --device-read-iops=/dev/sda:1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l device-write-bps -d 'Limit write rate (bytes per second) to a device (e.g. --device-write-bps=/dev/sda:1mb)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l device-write-iops -d 'Limit write rate (IO per second) to a device (e.g. --device-write-iops=/dev/sda:1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l dns -d 'Set custom DNS servers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l dns-opt -d 'Set custom DNS options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l dns-search -d 'Set custom DNS search domains'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l entrypoint -d 'Overwrite the default ENTRYPOINT of the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s e -l env -d 'Set environment variables in container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l env-file -d 'Read in a file of environment variables'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l expose -d 'Expose a port or a range of ports (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l gidmap -d 'GID map to use for the user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l group-add -d 'Add additional groups to join (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l healthcheck-command -d 'set a healthcheck command for the container (\'none\' disables the existing healthcheck)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l healthcheck-interval -d 'set an interval for the healthchecks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l healthcheck-retries -d 'the number of retries allowed before a healthcheck is considered to be unhealthy'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l healthcheck-start-period -d 'the initialization time needed for a container to bootstrap'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l healthcheck-timeout -d 'the maximum time allowed to complete the healthcheck before an interval is considered failed'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l help -d ''
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s h -l hostname -d 'Set container hostname'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l image-volume -d 'Tells podman how to handle the builtin image volumes. The options are: \'bind\', \'tmpfs\', or \'ignore\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l init -d 'Run an init binary inside the container that forwards signals and reaps processes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l init-path -d 'Path to the container-init binary (default: "/usr/libexec/podman/catatonit")'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'  -s i -l interactive -d 'Keep STDIN open even if not attached'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l ip -d 'Specify a static IPv4 address for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l ipc -d 'IPC namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l kernel-memory -d 'Kernel memory limit (format: `<number>[<unit>]`, where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s l -l label -d 'Set metadata on container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l label-file -d 'Read in a line delimited file of labels (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l log-driver -d 'Logging driver for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l log-opt -d 'Logging driver options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l mac-address -d 'Container MAC address (e.g. 92:d0:c6:0a:29:33), not currently supported'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s m -l memory -d 'Memory limit (format: <number>[<unit>], where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l memory-reservation -d 'Memory soft limit (format: <number>[<unit>], where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l memory-swap -d 'Swap limit equal to memory plus swap: \'-1\' to enable unlimited swap'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l memory-swappiness -d 'Tune container memory swappiness (0 to 100, or -1 for system default)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l mount -d 'Attach a filesystem mount to the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l name -d 'Assign a name to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l net -d 'Connect a container to a network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l network -d 'Connect a container to a network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l oom-kill-disable -d 'Disable OOM Killer'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l oom-score-adj -d 'Tune the host\'s OOM preferences (-1000 to 1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l pid -d 'PID namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l pids-limit -d 'Tune container pids limit (set -1 for unlimited)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l pod -d 'Run container in an existing pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l privileged -d 'Give extended privileges to container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s p -l publish -d 'Publish a container\'s port, or a range of ports, to the host (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'  -s P -l publish-all -d 'Publish all exposed ports to random ports on the host interface'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'  -s q -l quiet -d 'Suppress output information when pulling images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l read-only -d 'Make containers root filesystem read-only'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l restart -d 'Restart is not supported.  Please use a systemd unit file for restart'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l rm -d 'Remove container (and pod if created) after exit'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l rootfs -d 'The first argument is not an image but the rootfs to the exploded container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l security-opt -d 'Security Options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l shm-size -d 'Size of `/dev/shm`. The format is `<number><unit>`'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l stop-signal -d 'Signal to stop a container. Default is SIGTERM'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l stop-timeout -d 'Timeout (in seconds) to stop a container. Default is 10'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l subgidname -d 'Name of range listed in /etc/subgid for use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l subuidname -d 'Name of range listed in /etc/subuid for use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l sysctl -d 'Sysctl options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l systemd -d 'Run container in systemd mode if the command executable is systemd or init'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l tmpfs -d 'Mount a temporary filesystem (`tmpfs`) into a container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'  -s t -l tty -d 'Allocate a pseudo-TTY for container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l uidmap -d 'UID map to use for the user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l ulimit -d 'Ulimit options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s u -l user -d 'Username or UID (format: <name|uid>[:<group|gid>])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l userns -d 'User namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l uts -d 'UTS namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s v -l volume -d 'Bind mount a volume into the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l volumes-from -d 'Mount volumes from the specified container(s) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r -s w -l workdir -d 'Working directory inside the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path create'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l format -d 'Change the output format'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path diff'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l filter -d 'filter output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l format -d 'format the output using a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l since -d 'show all events created since timestamp'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l until -d 'show all events until timestamp'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path events'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r -s e -l env -d 'Set environment variables'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'  -s i -l interactive -d 'Not supported.  All exec commands are interactive by default'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l preserve-fds -d 'Pass N additional file descriptors to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'   -l privileged -d 'Give the process extended Linux capabilities inside the container.  The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'  -s t -l tty -d 'Allocate a pseudo-TTY. The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r -s u -l user -d 'Sets the username or UID used and optionally the groupname or GID for the specified command'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r -s w -l workdir -d 'Working directory inside the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path exec'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r -s o -l output -d 'Write to a specified file (default: stdout, which must be redirected)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path export'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -a kube -d 'Generate Kubernetes pod YAML from a container or pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube'  -s s -l service -d 'Generate YAML for kubernetes service object'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path generate kube'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -a run -d 'run the health check of a container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path healthcheck run'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l format -d 'Change the output to JSON or a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history'  -s H -l human -d 'Display sizes and dates in human readable format'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history'   -l no-trunc -d 'Do not truncate the output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history'  -s q -l quiet -d 'Display the numeric IDs only'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a build -d 'Build an image using instructions from Dockerfiles'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a exists -d 'Check if an image exists in local storage'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a history -d 'Show history of a specified image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a import -d 'Import a tarball to create a filesystem image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a inspect -d 'Display the configuration of an image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a list -d 'List images in local storage'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a load -d 'Load an image from container archive'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a prune -d 'Remove unused images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a pull -d 'Pull an image from a registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a push -d 'Push an image to a specified destination'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a rm -d 'Removes one or more images from local storage'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a save -d 'Save image to an archive'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a sign -d 'Sign an image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a tag -d 'Add an additional name to a local image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a tree -d 'Prints layer hierarchy of an image in a tree format'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -a trust -d 'Manage container image trust policy'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l add-host -d 'add a custom host-to-IP mapping (`host:ip`) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l annotation -d 'Set metadata for an image (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l authfile -d 'path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l build-arg -d '`argument=value` to supply to the builder'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cache-from -d 'Images to utilise as potential cache sources. The build process does not currently support caching so this is a NOOP.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cap-add -d 'add the specified capability when running (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cap-drop -d 'drop the specified capability when running (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cert-dir -d 'use certificates at the specified path to access the registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cgroup-parent -d 'optional parent cgroup for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cni-plugin-path -d '`path` of CNI network plugins'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l compress -d 'This is legacy option, which has no effect on the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cpu-period -d 'limit the CPU CFS (Completely Fair Scheduler) period'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cpu-quota -d 'limit the CPU CFS (Completely Fair Scheduler) quota'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r -s c -l cpu-shares -d 'CPU shares (relative weight)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cpuset-cpus -d 'CPUs in which to allow execution (0-3, 0,1)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cpuset-mems -d 'memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l creds -d 'use `[username[:password]]` for accessing the registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'  -s D -l disable-compression -d 'don\'t compress layers by default'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l disable-content-trust -d 'This is a Docker specific option and is a NOOP'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r -s f -l file -d '`pathname or URL` of a Dockerfile'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l force-rm -d 'Always remove intermediate containers after a build, even if the build is unsuccessful.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l format -d '`format` of the built image\'s manifest and metadata. Use BUILDAH_FORMAT environment variable to override.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l iidfile -d '`file` to write the image ID to'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l ipc -d '\'container\', `path` of IPC namespace to join, or \'host\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l isolation -d '`type` of process isolation to use. Use BUILDAH_ISOLATION environment variable to override.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l label -d 'Set metadata for an image (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l layers -d 'cache intermediate layers during build. Use BUILDAH_LAYERS environment variable to override.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l logfile -d 'log to `file` instead of stdout/stderr'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l loglevel -d 'adjust logging level (range from -2 to 3)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r -s m -l memory -d 'memory limit (format: <number>[<unit>], where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l memory-swap -d 'swap limit equal to memory plus swap: \'-1\' to enable unlimited swap'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l network -d '\'container\', `path` of network namespace to join, or \'host\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l no-cache -d 'Do not use existing cached images for the container build. Build from the start with a new set of cached layers.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l pid -d 'container, `path` of PID namespace to join, or \'host\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l platform -d 'CLI compatibility: no action or effect'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l pull -d 'pull the image if not present'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l pull-always -d 'pull the image, even if a version is present'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'  -s q -l quiet -d 'refrain from announcing build instructions and image read/write progress'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l rm -d 'Remove intermediate containers after a successful build'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l runtime-flag -d 'add global flags for the container runtime'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l security-opt -d 'security options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l shm-size -d 'size of \'/dev/shm\'. The format is `<number><unit>`.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l signature-policy -d '`pathname` of signature policy file (not usually used)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l squash -d 'Squash newly built layers into a single new layer.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r -s t -l tag -d 'tagged `name` to apply to the built image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l target -d 'set the target build stage to build'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l tls-verify -d 'require HTTPS and verify certificates when accessing the registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l ulimit -d 'ulimit options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l userns -d '\'container\', `path` of user namespace to join, or \'host\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l userns-gid-map -d '`containerID:hostID:length` GID mapping to use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l userns-gid-map-group -d '`name` of entries from /etc/subgid to use to set user namespace GID mapping'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l userns-uid-map -d '`containerID:hostID:length` UID mapping to use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l userns-uid-map-user -d '`name` of entries from /etc/subuid to use to set user namespace UID mapping'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l uts -d 'container, :`path` of UTS namespace to join, or \'host\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r -s v -l volume -d 'bind mount a volume into the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path build'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image exists'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l format -d 'Change the output to JSON or a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history'  -s H -l human -d 'Display sizes and dates in human readable format'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history'   -l no-trunc -d 'Do not truncate the output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history'  -s q -l quiet -d 'Display the numeric IDs only'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path history'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r -s c -l change -d 'Apply the following possible instructions to the created image (default []): CMD | ENTRYPOINT | ENV | EXPOSE | LABEL | STOPSIGNAL | USER | VOLUME | WORKDIR'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r -s m -l message -d 'Set commit message for imported image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import'  -s q -l quiet -d 'Suppress output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r -s f -l format -d 'Change the output format to a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image inspect'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list'  -s a -l all -d 'Show all images (default hides intermediate images)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list'   -l digests -d 'Show digests'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r -s f -l filter -d 'Filter output based on conditions provided (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l format -d 'Change the output format to JSON or a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list'   -l no-trunc -d 'Do not truncate output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list'  -s n -l noheading -d 'Do not print column headings'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list'  -s q -l quiet -d 'Display only image IDs'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l sort -d 'Sort by created, id, repository, size, or tag'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image list'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r -s i -l input -d 'Read from specified archive file (default: stdin)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load'  -s q -l quiet -d 'Suppress the output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l signature-policy -d 'Pathname of signature policy file (not usually used)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune'  -s a -l all -d 'Remove all unused images, not just dangling ones'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image prune'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull'   -l all-tags -d 'All tagged images inthe repository will be pulled'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l authfile -d 'Path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json. Use REGISTRY_AUTH_FILE environment variable to override'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l cert-dir -d '`Pathname` of a directory containing TLS certificates and keys'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l creds -d '`Credentials` (USERNAME:PASSWORD) to use for authenticating to a registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull'  -s q -l quiet -d 'Suppress output information when pulling images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l signature-policy -d '`Pathname` of signature policy file (not usually used)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull'   -l tls-verify -d 'Require HTTPS and verify certificates when contacting registries'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l authfile -d 'Path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json. Use REGISTRY_AUTH_FILE environment variable to override'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l cert-dir -d '`Pathname` of a directory containing TLS certificates and keys'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'   -l compress -d 'Compress tarball image layers when pushing to a directory using the \'dir\' transport. (default is same compression type as source)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l creds -d '`Credentials` (USERNAME:PASSWORD) to use for authenticating to a registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r -s f -l format -d 'Manifest type (oci, v2s1, or v2s2) to use when pushing an image using the \'dir:\' transport (default is manifest type of source)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'  -s q -l quiet -d 'Don\'t output progress information when pushing images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'   -l remove-signatures -d 'Discard any pre-existing signatures in the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l sign-by -d 'Add a signature at the destination using the specified key'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l signature-policy -d '`Pathname` of signature policy file (not usually used)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'   -l tls-verify -d 'Require HTTPS and verify certificates when contacting registries'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm'  -s a -l all -d 'Remove all images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm'  -s f -l force -d 'Force Removal of the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image rm'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save'   -l compress -d 'Compress tarball image layers when saving to a directory using the \'dir\' transport. (default is same compression type as source)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l format -d 'Save image to oci-archive, oci-dir (directory with oci manifest type), docker-archive, docker-dir (directory with v2s2 manifest type)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r -s o -l output -d 'Write to a specified file (default: stdout, which must be redirected)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save'  -s q -l quiet -d 'Suppress the output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r -s d -l directory -d 'Define an alternate directory to store signatures'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l sign-by -d 'Name of the signing key'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image sign'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree'   -l whatrequires -d 'Show all child images and layers of the specified image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image tree'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -a set -d 'Set default trust policy or a new trust policy for a registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -a show -d 'Display trust policy for the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r -s f -l pubkeysfile -d 'Path of installed public key(s) to trust for TARGET.
Absolute path to keys is added to policy.json. May
used multiple times to define multiple public keys.
File(s) must exist before using this command'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r -s t -l type -d 'Trust type, accept values: signedBy(default), accept, reject'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust set'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show'  -s j -l json -d 'Output as json'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show'   -l raw -d 'Output raw policy file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path image trust show'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images'  -s a -l all -d 'Show all images (default hides intermediate images)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images'   -l digests -d 'Show digests'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r -s f -l filter -d 'Filter output based on conditions provided (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l format -d 'Change the output format to JSON or a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images'   -l no-trunc -d 'Do not truncate output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images'  -s n -l noheading -d 'Do not print column headings'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images'  -s q -l quiet -d 'Display only image IDs'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l sort -d 'Sort by created, id, repository, size, or tag'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path images'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r -s c -l change -d 'Apply the following possible instructions to the created image (default []): CMD | ENTRYPOINT | ENV | EXPOSE | LABEL | STOPSIGNAL | USER | VOLUME | WORKDIR'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r -s m -l message -d 'Set commit message for imported image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import'  -s q -l quiet -d 'Suppress output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path import'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info'  -s D -l debug -d 'Display additional debug information'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r -s f -l format -d 'Change the output format to JSON or a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r -s f -l format -d 'Change the output format to a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect'  -s l -l latest -d 'Act on the latest container podman is aware of (containers only)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect'  -s s -l size -d 'Display total file size (containers only)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r -s t -l type -d 'Return JSON for specified type, (image or container)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path inspect'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill'  -s a -l all -d 'Signal all running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r -s s -l signal -d 'Signal to send to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path kill'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r -s i -l input -d 'Read from specified archive file (default: stdin)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load'  -s q -l quiet -d 'Suppress the output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l signature-policy -d 'Pathname of signature policy file (not usually used)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path load'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l authfile -d 'Path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json. Use REGISTRY_AUTH_FILE environment variable to override'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l cert-dir -d 'Pathname of a directory containing TLS certificates and keys used to connect to the registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login'   -l get-login -d 'Return the current login user for the registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r -s p -l password -d 'Password for registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login'   -l password-stdin -d 'Take the password from stdin'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login'   -l tls-verify -d 'Require HTTPS and verify certificates when contacting registries'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r -s u -l username -d 'Username for registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path login'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout'  -s a -l all -d 'Remove the cached credentials for all registries in the auth file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l authfile -d 'Path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json. Use REGISTRY_AUTH_FILE environment variable to override'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logout'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs'  -s f -l follow -d 'Follow log output.  The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l since -d 'Show logs since TIMESTAMP'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l tail -d 'Output the specified number of LINES at the end of the logs.  Defaults to 0, which prints all lines'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs'  -s t -l timestamps -d 'Output the timestamps in the log'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path logs'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount'  -s a -l all -d 'Mount all containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l format -d 'Change the output format to Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount'   -l notruncate -d 'Do not truncate output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path mount'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause'  -s a -l all -d 'Pause all running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pause'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -a kube -d 'Play a pod based on Kubernetes YAML'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l authfile -d 'Path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json. Use REGISTRY_AUTH_FILE environment variable to override'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l cert-dir -d '`Pathname` of a directory containing TLS certificates and keys'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l creds -d '`Credentials` (USERNAME:PASSWORD) to use for authenticating to a registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube'  -s q -l quiet -d 'Suppress output information when pulling images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l signature-policy -d '`Pathname` of signature policy file (not usually used)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube'   -l tls-verify -d 'Require HTTPS and verify certificates when contacting registries'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path play kube'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a create -d 'Create a new empty pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a exists -d 'Check if a pod exists in local storage'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a inspect -d 'Displays a pod configuration'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a kill -d 'Send the specified signal or SIGKILL to containers in pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a pause -d 'Pause one or more pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a ps -d 'List pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a restart -d 'Restart one or more pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a rm -d 'Remove one or more pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a start -d 'Start one or more pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a stats -d 'Display a live stream of resource usage statistics for the containers in one or more pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a stop -d 'Stop one or more pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a top -d 'Display the running processes of containers in a pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -a unpause -d 'Unpause one or more pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l cgroup-parent -d 'Set parent cgroup for the pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create'   -l infra -d 'Create an infra container associated with the pod to share namespaces with'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l infra-command -d 'The command to run on the infra container when the pod is started'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l infra-image -d 'The image of the infra container to associate with the pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r -s l -l label -d 'Set metadata on pod (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l label-file -d 'Read in a line delimited file of labels'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r -s n -l name -d 'Assign a name to the pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l pod-id-file -d 'Write the pod ID to the file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r -s p -l publish -d 'Publish a container\'s port, or a range of ports, to the host (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l share -d 'A comma delimited list of kernel namespaces the pod will share'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod create'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod exists'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect'  -s l -l latest -d 'Act on the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod inspect'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill'  -s a -l all -d 'Kill all containers in all pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill'  -s l -l latest -d 'Act on the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r -s s -l signal -d 'Signal to send to the containers in the pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod kill'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause'  -s a -l all -d 'Pause all running pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause'  -s l -l latest -d 'Act on the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod pause'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps'   -l ctr-ids -d 'Display the container UUIDs. If no-trunc is not set they will be truncated'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps'   -l ctr-names -d 'Display the container names'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps'   -l ctr-status -d 'Display the container status'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r -s f -l filter -d 'Filter output based on conditions given'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l format -d 'Pretty-print pods to JSON or using a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps'  -s l -l latest -d 'Act on the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps'   -l no-trunc -d 'Do not truncate pod and container IDs'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps'   -l ns -d 'Display namespace information of the pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps'  -s q -l quiet -d 'Print the numeric IDs of the pods only'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l sort -d 'Sort output by created, id, name, or number'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod ps'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart'  -s a -l all -d 'Restart all running pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart'  -s l -l latest -d 'Restart the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod restart'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm'  -s a -l all -d 'Remove all running pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm'  -s f -l force -d 'Force removal of a running pod by first stopping all containers, then removing all containers in the pod.  The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm'  -s l -l latest -d 'Remove the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod rm'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start'  -s a -l all -d 'Start all pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start'  -s l -l latest -d 'Start the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod start'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats'  -s a -l all -d 'Provide stats for all running pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l format -d 'Pretty-print container statistics to JSON or using a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats'  -s l -l latest -d 'Provide stats on the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats'   -l no-reset -d 'Disable resetting the screen between intervals'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats'   -l no-stream -d 'Disable streaming stats and only pull the first result, default setting is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stats'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop'  -s a -l all -d 'Stop all running pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop'  -s l -l latest -d 'Stop the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r -s t -l timeout -d 'Seconds to wait for pod stop before killing the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod stop'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top'  -s l -l latest, -d 'Act on the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod top'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause'  -s a -l all -d 'Unpause all running pods'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause'  -s l -l latest -d 'Unpause the latest pod podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pod unpause'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port'  -s a -l all -d 'Display port information for all containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path port'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps'  -s a -l all -d 'Show all the containers, default is only running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r -s f -l filter -d 'Filter output based on conditions given'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l format -d 'Pretty-print containers to JSON or using a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r -s n -l last -d 'Print the n last created containers (all states)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps'  -s l -l latest -d 'Show the latest container created (all states)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps'   -l no-trunc -d 'Display the extended information'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps'   -l ns -d 'Display namespace information'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps'  -s p -l pod -d 'Print the ID and name of the pod the containers are associated with'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps'  -s q -l quiet -d 'Print the numeric IDs of the containers only'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps'  -s s -l size -d 'Display the total file sizes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l sort -d 'Sort output by command, created, id, image, names, runningfor, size, or status'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps'   -l sync -d 'Sync container state with OCI runtime'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path ps'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull'   -l all-tags -d 'All tagged images inthe repository will be pulled'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l authfile -d 'Path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json. Use REGISTRY_AUTH_FILE environment variable to override'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l cert-dir -d '`Pathname` of a directory containing TLS certificates and keys'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l creds -d '`Credentials` (USERNAME:PASSWORD) to use for authenticating to a registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull'  -s q -l quiet -d 'Suppress output information when pulling images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l signature-policy -d '`Pathname` of signature policy file (not usually used)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull'   -l tls-verify -d 'Require HTTPS and verify certificates when contacting registries'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path pull'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l authfile -d 'Path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json. Use REGISTRY_AUTH_FILE environment variable to override'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l cert-dir -d '`Pathname` of a directory containing TLS certificates and keys'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'   -l compress -d 'Compress tarball image layers when pushing to a directory using the \'dir\' transport. (default is same compression type as source)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l creds -d '`Credentials` (USERNAME:PASSWORD) to use for authenticating to a registry'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r -s f -l format -d 'Manifest type (oci, v2s1, or v2s2) to use when pushing an image using the \'dir:\' transport (default is manifest type of source)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'  -s q -l quiet -d 'Don\'t output progress information when pushing images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'   -l remove-signatures -d 'Discard any pre-existing signatures in the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l sign-by -d 'Add a signature at the destination using the specified key'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l signature-policy -d '`Pathname` of signature policy file (not usually used)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'   -l tls-verify -d 'Require HTTPS and verify certificates when contacting registries'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path push'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart'  -s a -l all -d 'Restart all non-running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart'   -l running -d 'Restart only running containers when --all is used'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l time -d 'Seconds to wait for stop before killing the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r -s t -l timeout -d 'Seconds to wait for stop before killing the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path restart'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'  -s a -l all -d 'Remove all containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'  -s f -l force -d 'Force removal of a running container.  The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'  -s v -l volumes -d 'Remove the volumes associated with the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rm'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi'  -s a -l all -d 'Remove all images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi'  -s f -l force -d 'Force Removal of the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path rmi'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l add-host -d 'Add a custom host-to-IP mapping (host:ip) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l annotation -d 'Add annotations to container (key:value) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s a -l attach -d 'Attach to STDIN, STDOUT or STDERR (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l blkio-weight -d 'Block IO weight (relative weight) accepts a weight value between 10 and 1000.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l blkio-weight-device -d 'Block IO weight (relative device weight, format: `DEVICE_NAME:WEIGHT`)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cap-add -d 'Add capabilities to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cap-drop -d 'Drop capabilities from the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cgroup-parent -d 'Optional parent cgroup for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cidfile -d 'Write the container ID to the file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l conmon-pidfile -d 'Path to the file that will receive the PID of conmon'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-period -d 'Limit the CPU CFS (Completely Fair Scheduler) period'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-quota -d 'Limit the CPU CFS (Completely Fair Scheduler) quota'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-rt-period -d 'Limit the CPU real-time period in microseconds'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-rt-runtime -d 'Limit the CPU real-time runtime in microseconds'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-shares -d 'CPU shares (relative weight)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpus -d 'Number of CPUs. The default is 0.000 which means no limit'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpuset-cpus -d 'CPUs in which to allow execution (0-3, 0,1)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpuset-mems -d 'Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems.'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'  -s d -l detach -d 'Run container in background and print container ID'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l detach-keys -d 'Override the key sequence for detaching a container. Format is a single character `[a-Z]` or `ctrl-<value>` where `<value>` is one of: `a-z`, `@`, `^`, `[`, `\`, `]`, `^` or `_`'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l device -d 'Add a host device to the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l device-read-bps -d 'Limit read rate (bytes per second) from a device (e.g. --device-read-bps=/dev/sda:1mb)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l device-read-iops -d 'Limit read rate (IO per second) from a device (e.g. --device-read-iops=/dev/sda:1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l device-write-bps -d 'Limit write rate (bytes per second) to a device (e.g. --device-write-bps=/dev/sda:1mb)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l device-write-iops -d 'Limit write rate (IO per second) to a device (e.g. --device-write-iops=/dev/sda:1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l dns -d 'Set custom DNS servers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l dns-opt -d 'Set custom DNS options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l dns-search -d 'Set custom DNS search domains'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l entrypoint -d 'Overwrite the default ENTRYPOINT of the image'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s e -l env -d 'Set environment variables in container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l env-file -d 'Read in a file of environment variables'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l expose -d 'Expose a port or a range of ports (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l gidmap -d 'GID map to use for the user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l group-add -d 'Add additional groups to join (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l healthcheck-command -d 'set a healthcheck command for the container (\'none\' disables the existing healthcheck)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l healthcheck-interval -d 'set an interval for the healthchecks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l healthcheck-retries -d 'the number of retries allowed before a healthcheck is considered to be unhealthy'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l healthcheck-start-period -d 'the initialization time needed for a container to bootstrap'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l healthcheck-timeout -d 'the maximum time allowed to complete the healthcheck before an interval is considered failed'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l help -d ''
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s h -l hostname -d 'Set container hostname'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l image-volume -d 'Tells podman how to handle the builtin image volumes. The options are: \'bind\', \'tmpfs\', or \'ignore\''
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l init -d 'Run an init binary inside the container that forwards signals and reaps processes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l init-path -d 'Path to the container-init binary (default: "/usr/libexec/podman/catatonit")'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'  -s i -l interactive -d 'Keep STDIN open even if not attached'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l ip -d 'Specify a static IPv4 address for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l ipc -d 'IPC namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l kernel-memory -d 'Kernel memory limit (format: `<number>[<unit>]`, where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s l -l label -d 'Set metadata on container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l label-file -d 'Read in a line delimited file of labels (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l log-driver -d 'Logging driver for the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l log-opt -d 'Logging driver options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l mac-address -d 'Container MAC address (e.g. 92:d0:c6:0a:29:33), not currently supported'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s m -l memory -d 'Memory limit (format: <number>[<unit>], where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l memory-reservation -d 'Memory soft limit (format: <number>[<unit>], where unit = b, k, m or g)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l memory-swap -d 'Swap limit equal to memory plus swap: \'-1\' to enable unlimited swap'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l memory-swappiness -d 'Tune container memory swappiness (0 to 100, or -1 for system default)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l mount -d 'Attach a filesystem mount to the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l name -d 'Assign a name to the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l net -d 'Connect a container to a network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l network -d 'Connect a container to a network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l oom-kill-disable -d 'Disable OOM Killer'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l oom-score-adj -d 'Tune the host\'s OOM preferences (-1000 to 1000)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l pid -d 'PID namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l pids-limit -d 'Tune container pids limit (set -1 for unlimited)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l pod -d 'Run container in an existing pod'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l privileged -d 'Give extended privileges to container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s p -l publish -d 'Publish a container\'s port, or a range of ports, to the host (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'  -s P -l publish-all -d 'Publish all exposed ports to random ports on the host interface'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'  -s q -l quiet -d 'Suppress output information when pulling images'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l read-only -d 'Make containers root filesystem read-only'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l restart -d 'Restart is not supported.  Please use a systemd unit file for restart'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l rm -d 'Remove container (and pod if created) after exit'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l rootfs -d 'The first argument is not an image but the rootfs to the exploded container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l security-opt -d 'Security Options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l shm-size -d 'Size of `/dev/shm`. The format is `<number><unit>`'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l sig-proxy -d 'Proxy received signals to the process'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l stop-signal -d 'Signal to stop a container. Default is SIGTERM'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l stop-timeout -d 'Timeout (in seconds) to stop a container. Default is 10'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l subgidname -d 'Name of range listed in /etc/subgid for use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l subuidname -d 'Name of range listed in /etc/subuid for use in user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l sysctl -d 'Sysctl options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l systemd -d 'Run container in systemd mode if the command executable is systemd or init'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l tmpfs -d 'Mount a temporary filesystem (`tmpfs`) into a container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'  -s t -l tty -d 'Allocate a pseudo-TTY for container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l uidmap -d 'UID map to use for the user namespace'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l ulimit -d 'Ulimit options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s u -l user -d 'Username or UID (format: <name|uid>[:<group|gid>])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l userns -d 'User namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l uts -d 'UTS namespace to use'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s v -l volume -d 'Bind mount a volume into the container (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l volumes-from -d 'Mount volumes from the specified container(s) (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r -s w -l workdir -d 'Working directory inside the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path run'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save'   -l compress -d 'Compress tarball image layers when saving to a directory using the \'dir\' transport. (default is same compression type as source)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l format -d 'Save image to oci-archive, oci-dir (directory with oci manifest type), docker-archive, docker-dir (directory with v2s2 manifest type)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r -s o -l output -d 'Write to a specified file (default: stdout, which must be redirected)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save'  -s q -l quiet -d 'Suppress the output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path save'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l authfile -d 'Path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json. Use REGISTRY_AUTH_FILE environment variable to override'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r -s f -l filter -d 'Filter output based on conditions provided (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l format -d 'Change the output format to a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l limit -d 'Limit the number of results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search'   -l no-trunc -d 'Do not truncate the output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search'   -l tls-verify -d 'Require HTTPS and verify certificates when contacting registries'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path search'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'  -s a -l attach -d 'Attach container\'s STDOUT and STDERR'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l detach-keys -d 'Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'  -s i -l interactive -d 'Keep STDIN open even if not attached'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'   -l sig-proxy -d 'Proxy received signals to the process (default true if attaching, false otherwise)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path start'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'  -s a -l all -d 'Show all containers. Only running containers are shown by default. The default is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l format -d 'Pretty-print container statistics to JSON or using a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'   -l no-reset -d 'Disable resetting the screen between intervals'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'   -l no-stream -d 'Disable streaming stats and only pull the first result, default setting is false'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stats'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop'  -s a -l all -d 'Stop all running containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l time -d 'Seconds to wait for stop before killing the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r -s t -l timeout -d 'Seconds to wait for stop before killing the container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path stop'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -a info -d 'Display podman system information'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -a prune -d 'Remove unused data'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -a renumber -d 'Migrate lock numbers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info'  -s D -l debug -d 'Display additional debug information'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r -s f -l format -d 'Change the output format to JSON or a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system info'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune'  -s a -l all -d 'Remove all unused data'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune'  -s f -l force -d 'Do not prompt for confirmation'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune'   -l volumes -d 'Prune volumes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system prune'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path system renumber'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path tag'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path top'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount'  -s a -l all -d 'Umount all of the currently mounted containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount'  -s f -l force -d 'Force the complete umount all of the currently mounted containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path umount'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause'  -s a -l all -d 'Unpause all paused containers'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path unpause'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r -s t -l timeout -d 'Time until the varlink session expires in milliseconds.  Use 0 to disable the timeout'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path varlink'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r -s f -l format -d 'Change the output format to JSON or a Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path version'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -a create -d 'Create a new volume'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -a inspect -d 'Display detailed information on one or more volumes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -a ls -d 'List volumes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -a prune -d 'Remove all unused volumes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -a rm -d 'Remove one or more volumes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l driver -d 'Specify volume driver name (default local)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r -s l -l label -d 'Set metadata for a volume (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r -s o -l opt -d 'Set driver specific options (default [])'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume create'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect'  -s a -l all -d 'Inspect all volumes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r -s f -l format -d 'Format volume output using Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume inspect'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r -s f -l filter -d 'Filter volume output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l format -d 'Format volume output using Go template'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls'  -s q -l quiet -d 'Print volume output in quiet mode'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume ls'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune'  -s f -l force -d 'Do not prompt for confirmation'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume prune'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm'  -s a -l all -d 'Remove all volumes'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm'  -s f -l force -d 'Remove a volume by force, even if it is being used by a container'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path volume rm'   -l trace -d 'enable opentracing output'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r -s i -l interval -d 'Milliseconds to wait before polling for completion'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait'  -s l -l latest -d 'Act on the latest container podman is aware of'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l cgroup-manager -d 'Cgroup manager to use (cgroupfs or systemd, default systemd)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l cni-config-dir -d 'Path of the configuration directory for CNI networks'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l config -d 'Path of a libpod config file detailing container server configuration options'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l conmon -d 'Path of the conmon binary'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l cpu-profile -d 'Path for the cpu profiling results'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l default-mounts-file -d 'Path to default mounts file'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l hooks-dir -d 'Set the OCI hooks directory path (may be set multiple times)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l log-level -d 'Log messages above specified level: debug, info, warn, error, fatal or panic'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l namespace -d 'Set the libpod namespace, used to create separate views of the containers and pods on the system'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l network-cmd-path -d 'Path to the command for configuring the network'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l root -d 'Path to the root directory in which data, including images, is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l runroot -d 'Path to the \'run directory\' where all state information is stored'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l runtime -d 'Path to the OCI-compatible binary used to run containers, default is /usr/bin/runc'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l storage-driver -d 'Select which storage driver is used to manage storage of images and containers (default is overlay)'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l storage-opt -d 'Used to pass an option to the storage driver'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait'   -l syslog -d 'Output logging information to syslog as well as the console'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait' -r  -l tmpdir -d 'Path to the tmp directory'
complete -c podman -f -n '__fish_podman_seen_subcommand_path wait'   -l trace -d 'enable opentracing output'

